{"version":3,"sources":["./src/app/schedules/schedules.component.html","./src/app/schedules/schedules.component.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/file-upload/file-upload.component.ts","./src/app/file-upload/file-upload.component.html","./src/app/schedule-list/schedule-list.component.html","./src/app/schedule-list/schedule-list.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/schedules.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<mat-toolbar *ngIf=\"successMsg\" color=\"accent\">{{ successMsg }}</mat-toolbar>\n<mat-toolbar *ngIf=\"errorMsg\" color=\"warn\">{{ errorMsg }}</mat-toolbar>\n\n<div class=\"form-container\">\n  <form (submit)=\"createSchedule()\">\n    <mat-form-field>\n      <input [(ngModel)]=\"date\" name=\"date\" matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n    <mat-form-field>\n      <input [(ngModel)]=\"name\" name=\"name\" matInput placeholder=\"Name\">\n    </mat-form-field>\n    <mat-form-field>\n      <input [(ngModel)]=\"email\" name=\"email\" matInput placeholder=\"Email\">\n    </mat-form-field>\n    <label for=\"file\">Upload file</label>\n    <input id=\"file\" type=\"file\" name=\"document\" \n    (change)=\"handleFileInput($event)\">\n    <br>\n    <!-- <mat-file-upload-queue #fileUploadQueue\n      [fileAlias]=\"'file'\"\n    >\n      <mat-file-upload [file]=\"file\" [id]=\"i\" *ngFor=\"let file of fileUploadQueue.files; let i = index\"></mat-file-upload>\n    </mat-file-upload-queue> -->\n    <button type=\"submit\" mat-raised-button color=\"primary\">Schedule</button>\n  </form>\n</div>\n\n<div link-container>\n  <a target=\"blank\" href=\"http://localhost:4200/schedule-list\">All Scheduled Reports</a>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { SchedulesService } from '../schedules.service';\nimport { Buffer } from 'buffer';\nimport { Schedule } from '../schedules';\nimport { type } from 'os';\n\n@Component({\n  selector: 'app-schedules',\n  templateUrl: './schedules.component.html',\n  styleUrls: ['./schedules.component.css']\n})\nexport class SchedulesComponent implements OnInit {\n\n  // private fileName: string;\n  uploading: boolean = false;\n\n  public successMsg: string;\n  public errorMsg: string;\n  public date: string;\n  public name: string;\n  public email: string;\n  public document: File;\n\n  constructor(private scheduleService: SchedulesService) { }\n\n  ngOnInit(): void {\n  }\n\n  private onUpload() {\n    this.uploading = !this.uploading;\n    // console.log(this.document);\n\n    this.scheduleService.upload(this.document).subscribe((event: any) => {\n      if (typeof (event) === \"object\") {\n        this.uploading = false;\n      }\n    })\n  }\n\n  public handleFileInput(event: any) {\n    this.document = event.target.files[0];\n    // this.onUpload();\n  };\n\n  createSchedule() {\n    this.successMsg = \"\";\n    this.errorMsg = \"\";\n    this.scheduleService.createSchedule(this.date, this.name, this.email, this.document)\n      .subscribe((createdSchedule: Schedule) => {\n        this.date = \"\";\n        this.name = \"\";\n        this.email = \"\";\n        this.document = null;\n        const date = new Date(createdSchedule.date).toDateString();\n        this.successMsg = `Report scheduled successfully for ${date}`;\n        console.log(this.successMsg)\n      },\n      (error: ErrorEvent) => {\n        this.errorMsg = error.error.message;\n      });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-schedules></app-schedules>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: \"http://localhost:3000\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css']\n})\nexport class FileUploadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>file-upload works!</p>\n","<mat-spinner *ngIf=\"loading\"></mat-spinner>\n<mat-toolbar *ngIf=\"successMsg\" color=\"accent\">{{ successMsg }}</mat-toolbar>\n<mat-toolbar *ngIf=\"errorMsg\" color=\"warn\">{{ errorMsg }}</mat-toolbar>\n\n<div *ngIf=\"!loading && !loading\"> <!--errorMsg-->\n  <table mat-table [dataSource]=\"schedules\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"date\">\n      <th mat-header-cell *matHeaderCellDef>Schedule Date</th>\n      <td mat-cell *matCellDef=\"let schedule\">{{schedule.date | date: \"dd/MMM/yyyy, h:mm a\"}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let schedule\">{{schedule.name}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef>Email</th>\n      <td mat-cell *matCellDef=\"let schedule\">{{schedule.email}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"document\">\n      <th mat-header-cell *matHeaderCellDef>Document</th>\n      <td mat-cell *matCellDef=\"let schedule\">{{schedule.document}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"cancel\">\n      <th mat-header-cell *matHeaderCellDef>Cancel</th>\n      <td mat-cell *matCellDef=\"let schedule\"><button (click)=\"cancelSchedule(schedule._id)\" mat-raised-button color=\"warn\">Cancel</button></td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n    <tr mat-row *matRowDef=\"let schedules; columns: columns\"></tr>\n  </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Schedule } from '../schedules';\nimport { SchedulesService } from '../schedules.service';\nimport {mergeMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-schedule-list',\n  templateUrl: './schedule-list.component.html',\n  styleUrls: ['./schedule-list.component.css']\n})\nexport class ScheduleListComponent implements OnInit {\n\n  public loading = true;\n  public errorMsg: string = \"\";\n  public successMsg: string = \"\";\n  public schedules: Schedule[] = [];\n  public columns = [\"date\", \"name\", \"email\", \"document\", \"cancel\"];\n\n  constructor(private scheduleService: SchedulesService) {}\n\n  ngOnInit(): void {\n    this.scheduleService.getSchedules()\n      .subscribe((schedules: Schedule[]) => {\n        this.schedules = schedules;\n        this.loading = false;\n      }, \n      (error: ErrorEvent) => {\n        this.errorMsg = error.error.message;\n        this.loading = false\n      });\n  };\n\n  cancelSchedule(id: string) {\n    this.scheduleService.cancelSchedule(id)\n      .pipe( mergeMap(() => this.scheduleService.getSchedules()))\n      .subscribe((schedules: Schedule[]) => {\n        this.schedules = schedules;\n        this.successMsg = \"Successfully cancelled the schedule.\"\n      },\n      (error: ErrorEvent) => {\n        this.errorMsg = error.error.message;\n      });\n  };\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'reportSchedules';\n}\n","<div class=\"container\">\n  <h1>Schedule Report</h1>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { HomeComponent } from './home/home.component';\nimport { SchedulesComponent } from './schedules/schedules.component';\nimport { ScheduleListComponent } from './schedule-list/schedule-list.component';\nimport { FileUploadComponent } from './file-upload/file-upload.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    SchedulesComponent,\n    ScheduleListComponent,\n    FileUploadComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatProgressSpinnerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatToolbarModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { environment } from \"../environments/environment\"\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Schedule } from \"./schedules\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SchedulesService {\n  private BASE_URL = environment.API_URL;\n\n  constructor(private http: HttpClient) { }\n\n  getSchedules(): Observable<Schedule[]> {\n    return this.http.get<Schedule[]>(`${this.BASE_URL}/schedule`);\n  };\n\n  createSchedule(date: string, name: string, email: string, document: File):\n  Observable<Schedule> {\n    // const formData = new FormData();\n    // formData.append(\"document\", document, document.name);\n    \n    return this.http.post<Schedule>(`${this.BASE_URL}/schedule`, {\n      date,\n      name,\n      email,\n      document\n    });\n  };\n\n  cancelSchedule(id: string): Observable<any> {\n    return this.http.delete(`${this.BASE_URL}/schedule/${id}`);\n  };\n\n  upload(document: File): Observable<any> {\n    const formData = new FormData()\n    formData.append(\"document\", document, document.name);\n    // console.log(formData.get(\"document\"));\n    return this.http.post(`${this.BASE_URL}/schedule/uploadreport`, formData);\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { ScheduleListComponent } from './schedule-list/schedule-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'schedule-list',\n    component: ScheduleListComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}